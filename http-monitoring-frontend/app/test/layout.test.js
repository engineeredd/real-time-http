// RootLayout.test.js
import { render, screen } from '@testing-library/react';
import RootLayout, { metadata } from '../layout';

// Mock next/font/local to return an object with the expected variable properties
jest.mock('next/font/local', () => {
  return () => ({
    variable: 'mocked-font-variable',
  });
});

describe('RootLayout', () => {
  it('sets the correct metadata', () => {
    expect(metadata).toEqual({
      title: "Create Next App",
      description: "Generated by create next app",
    });
  });

  it('renders children correctly', () => {
    render(
      <RootLayout>
        <div>Test Child</div>
      </RootLayout>
    );
    // Check if children are rendered within the body
    expect(screen.getByText('Test Child')).toBeInTheDocument();
  });

  it('applies font variables to body', () => {
    const { container } = render(
      <RootLayout>
        <div>Test Child</div>
      </RootLayout>
    );

    // Check that body has the mocked font variable class
    const body = container.querySelector('body');
    expect(body).toHaveClass('mocked-font-variable');
    expect(body).toHaveClass('antialiased');
  });
});